server:
  port: 8081 # Web과 같이 구동해야 하기 때문에 포트 변경

spring:
  application:
    name: batch-proj
  datasource: # docker-compose에 정의했던 DB 접속 정보
    # zeroDateTimeBehavior=convertToNull : 로컬 데이트 타임과 같은 값들이 0인 값들을 null로 변경
    # characterEncoding=UTF-8 : jdbc를 통해 db로 보내는 값을 utf-8로 지정
    # serverTimezone=Asia/Seoul : 서버 시간 설정
    url: jdbc:mysql://localhost:3306/batch_local?zeroDateTimeBehavior=convertToNull&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
    username: batch_local_user
    password: batchlocal123
    driver-class-name: com.mysql.cj.jdbc.Driver
    # hikari : 스프링부트 2.0을 기점으로 기본 dbcp, 데이터 베이스 커넥션 풀이 톰캣 dbcp에서 hikari cp로 변경
    # hikari cp는 톰캣 dbcp와는 다르게 사용하지 않는 커넥션을 회수하도록 설계가 되었다.
    hikari:
      # default 10, mnimum-poll-size도 이를 따라감
      maximum-pool-size: 20 # pool에 보관 가능한 최대 connection 수
      # minimum-idle: 20 maximum-pool-size를 따라가므로 설정을 생락한다.

  batch:
    job:
      enabled: false # 기본값 true로 설정하게 되면 Spring boot 실행 시 등록되어 있는 Job 들이 실행되기 때문에 방지하기 위해 false로 설정
    jdbc:
      # 외부 디비를 연결하는 경우 자동으로 테이블을 생성하는 기능
      # batch에 사용되는 SQL 초기화 스크립트를 실행한다.
      # 임베디드인 경우에는 기본적으로 실행하는데, always 설정을 하면 임베디드 타입처럼 항상 활성화 시킬 수 있다.
      # 초기 수행한 이후에는 꺼두어도 된다.
      initialize-schema: always
